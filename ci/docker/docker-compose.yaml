version: '3.2'
services:

# /////////////////////////////////////////////////////////////
# POSTEGRES
# /////////////////////////////////////////////////////////////
  # michelada:
  #   image: ${REPO_ADDRESS}/michelada:0.0.1
  #   container_name: michelada
  #   restart: always
  #   build:
  #     context: ./django
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8044:8044"
  #   env_file: .env
  #   networks:
  #     - michelada

# /////////////////////////////////////////////////////////////
# POSTEGRES
# /////////////////////////////////////////////////////////////
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
    networks:
      - michelada

# /////////////////////////////////////////////////////////////
# MONGO DB 
# /////////////////////////////////////////////////////////////
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - michelada

# /////////////////////////////////////////////////////////////
# RABBIT MQ 
# /////////////////////////////////////////////////////////////
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq/
        - rabbitmq_log:/var/log/rabbitmq
    networks:
      - michelada

# /////////////////////////////////////////////////////////////
# CONFIGURATION
# /////////////////////////////////////////////////////////////
volumes:
  postgres:
    driver: local
  rabbitmq_data:
  rabbitmq_log:

networks:
  michelada:

  